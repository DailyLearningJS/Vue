{
  "stats": {
    "suites": 6,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2019-03-15T03:16:39.476Z",
    "end": "2019-03-15T03:16:39.505Z",
    "duration": 29,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "6b5fbe9b-8370-4b0f-bd52-d3ff4f8d1a4b",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "3d85b301-6adf-4343-8751-2b621128d30d",
        "title": "加法函数测试",
        "fullFile": "/Users/yunshan/Desktop/Learning/vue/Vue/vue-demo/test/add.test.js",
        "file": "/test/add.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": " 1 加 1 应该等于 2",
            "fullTitle": "加法函数测试  1 加 1 应该等于 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(add(1, 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "bad79db7-2b77-4e79-9f19-2e1f5a412722",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "bad79db7-2b77-4e79-9f19-2e1f5a412722"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "20dc547e-d95d-48dd-90f7-f303ffe3abf9",
        "title": "断言风格测试",
        "fullFile": "/Users/yunshan/Desktop/Learning/vue/Vue/vue-demo/test/add.test.js",
        "file": "/test/add.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "测试是否可以多个同时进行",
            "fullTitle": "断言风格测试 测试是否可以多个同时进行",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(4 + 5).to.be.equal(9)\nexpect(4 + 5).to.be.not.equal(10)",
            "err": {},
            "isRoot": false,
            "uuid": "919f650a-4871-4b32-ab52-d270108d6161",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "测试断言ok 校验boolean类型",
            "fullTitle": "断言风格测试 测试断言ok 校验boolean类型",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect('everything').to.be.ok\nexpect(false).to.not.be.ok\nexpect(false).to.not.ok",
            "err": {},
            "isRoot": false,
            "uuid": "bbbe6407-c952-4e33-b4cf-361335196c75",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "测试typeof的使用",
            "fullTitle": "断言风格测试 测试typeof的使用",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect('test').to.be.a('string')\nexpect({ foo: 'bar'}).to.be.a('object')\nexpect(foo).to.be.a.instanceOf(Foo)\nexpect({ foo: 'bar'}).to.be.an('object')\nexpect(foo).to.be.an.instanceOf(Foo)",
            "err": {},
            "isRoot": false,
            "uuid": "2ecd2682-c52e-48a4-ba6c-d5db7213eb60",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "测试include的使用",
            "fullTitle": "断言风格测试 测试include的使用",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect([1, 2, 3]).to.be.include(2)\nexpect('foo-text').to.contain('text')\nexpect({name: 'foo', sex: 'box'}).to.include.keys('sex')",
            "err": {},
            "isRoot": false,
            "uuid": "a4819ab8-20c3-4d57-915e-c82460aaaffb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "测试empty的使用",
            "fullTitle": "断言风格测试 测试empty的使用",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect([]).to.empty\nexpect({}).to.be.empty\nexpect('').to.empty",
            "err": {},
            "isRoot": false,
            "uuid": "888af1d0-0d3c-4aa1-82e4-e1f75e2a2fce",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "测试match 正则表达式的使用",
            "fullTitle": "断言风格测试 测试match 正则表达式的使用",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect('foo').to.be.match(/^\\w/)",
            "err": {},
            "isRoot": false,
            "uuid": "ed6ae750-5da0-4ada-95e8-f4eeed58f8ee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "不抛出错误就会测试通过",
            "fullTitle": "断言风格测试 不抛出错误就会测试通过",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "c83f8857-f14a-4834-a2a9-4b078f451212",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "919f650a-4871-4b32-ab52-d270108d6161",
          "bbbe6407-c952-4e33-b4cf-361335196c75",
          "2ecd2682-c52e-48a4-ba6c-d5db7213eb60",
          "a4819ab8-20c3-4d57-915e-c82460aaaffb",
          "888af1d0-0d3c-4aa1-82e4-e1f75e2a2fce",
          "ed6ae750-5da0-4ada-95e8-f4eeed58f8ee",
          "c83f8857-f14a-4834-a2a9-4b078f451212"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 6,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e11e0dae-4c1e-4bfe-8145-5b528f013700",
        "title": "验证是否默认读取test文件夹子目录下的文件",
        "fullFile": "/Users/yunshan/Desktop/Learning/vue/Vue/vue-demo/test/dir/multiply.test.js",
        "file": "/test/dir/multiply.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "是否校验dir目录下的test文件呢",
            "fullTitle": "验证是否默认读取test文件夹子目录下的文件 是否校验dir目录下的test文件呢",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "c6d03a1c-8ca5-4665-8d15-9aabdafccf93",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c6d03a1c-8ca5-4665-8d15-9aabdafccf93"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4eccf7bb-7d57-4c2f-8b5c-39f5dce98724",
        "title": "Array",
        "fullFile": "/Users/yunshan/Desktop/Learning/vue/Vue/vue-demo/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "9779de4d-56bf-474a-a784-56d8d1f7503c",
            "title": "#indexOf()",
            "fullFile": "/Users/yunshan/Desktop/Learning/vue/Vue/vue-demo/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return -1 when the value is not present",
                "fullTitle": "Array #indexOf() should return -1 when the value is not present",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(-1, [1, 2, 3].indexOf(4))",
                "err": {},
                "isRoot": false,
                "uuid": "f6b29f69-2533-44d1-85a8-04010a39b09b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f6b29f69-2533-44d1-85a8-04010a39b09b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e1536d00-de34-4470-b4e4-0c4b9285a08c",
        "title": "#test",
        "fullFile": "/Users/yunshan/Desktop/Learning/vue/Vue/vue-demo/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should complete this test",
            "fullTitle": "#test should complete this test",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "return new Promise(function(resolve, reject) {\n  assert.ok(true)\n  done()\n})",
            "err": {},
            "isRoot": false,
            "uuid": "17f4af8f-e595-4807-8e3b-b115ed0e29b0",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "17f4af8f-e595-4807-8e3b-b115ed0e29b0"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}